<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Stephan's blog (personal)</title><link>http://blog.sp.or.at</link><description>Stephan's notes on technology</description><lastBuildDate>Wed, 22 May 2013 18:25:16 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Android, Mythbusters and openness</title><link>http://blog.sp.or.at/posts/200911android-mythbusters-and-openness.html</link><description>&lt;p&gt;I have been reading a great many posts about Android lately, some consisting of criticism, some of praise and some simply addressing issues in the Android "community". Let's have a look at those.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Matt Porter's &lt;/strong&gt;&lt;strong&gt;Android Mythbusters presentation&lt;/strong&gt;&lt;strong&gt; and Harald Welte's reaction&lt;br&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;I haven't seen the presentation live, but I had a look at &lt;a href="http://tree.celinuxforum.org/CelfPubWiki/ELCEurope2009Presentations?action=AttachFile&amp;amp;do=get&amp;amp;target=Mythbusters_Android.pdf" title="Mythbusters_Android.pdf @ tree.celinux.org"&gt;the slides&lt;/a&gt;. Impressing work done by Matt putting all this information together. However, we all knew that Android only (ab-)uses Linux, without making use of the GNU userland for a long time, didn't we?&lt;br&gt;&lt;br&gt;In his presentation Matt has shown things such as Android's udev "replacement" that uses hardcoded values for device node creation and (on his &lt;a href="http://laforge.gnumonks.org/weblog/2009/11/04/#20091104-android_mythbusters" title="Android Mythbusters (Matt Porter) comment @ laforge.gnumonks.org"&gt;blog&lt;/a&gt;) Harald has then come up with a statement I have found to be very strong:&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;The presentation shows how Google has simply thrown 5-10 years of Linux userspace evolution into the trashcan and re-implemented it partially for no reason.  Things like hard-coded device lists/permissions in object code rather than config files, the lack of support for hot-plugging devices (udev), the lack of kernel headers.  A libc that throws away System V IPC that every unix/Linux software developer takes for granted. The lack of complete POSIX threads.  I could continue this list, but hey, you should read those slides. now!&lt;/blockquote&gt;&lt;br&gt;Now both of these statements target technical details, but the root of the problem seems to be elsewhere.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Where is my Android 2.0?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;Okay, that heading might not be making any sense in the context of this post at a first glance, but let me elaborate on that. Google and the Open Handset Alliance refer to Android as being an "Open Source" operating system, but the project is different from "real" Free Software projects: development takes place in a closed group and the results are shared with the community later on, when they are deemed to be ready.&lt;br&gt;&lt;br&gt;This means that innovation also takes place behind closed curtains and that the community is not involved in the actual development process at all. Lately we have seen the result of that, as Motorola is bragging about working close with Google on Android 2.0 ("Eclair"), but the AOSP source trees, open for everyone to have a look at, show no signs of version 2.0. In fact no changes that might even remotely suggest the release of a new major version have been made public in the past few weeks. So where is the openess there?&lt;br&gt;Actually, the Motorola Droid has already shipped with Eclair on 6th, but still, there is no indication that Eclair will be made available to the broader public.&lt;br&gt;&lt;br&gt;In short Android seems to be developed behind closed curtains, with hardly (read no) community input whatsoever and is sometimes released as Free Software, not what I would describe as an open development process.&lt;br&gt;&lt;br&gt;&lt;strong&gt;The Android Market problem&lt;/strong&gt;&lt;br&gt;&lt;br&gt;As we have seen in the past Google is enforcing their copyright on proprietary applications that ship with pretty much every Android device, such as the Android Market. This has become really clear when Steve Kondik received  a cease and desist letter when packing the Google-proprietary applications into his ROMs. Okay, it's Google's right to enforce their copyright and there is nothing wrong with actually doing so, the thing I really have a problem with is something else: the Market is proprietary.&lt;br&gt;&lt;br&gt;Now what this means should become rather clear. You can have an Android device without Google's proprietary bits, but with default settings you just do not have any way of installing additional software. In my opinion the Market should be freed by Google themselves, or the community has to react and come up with a free replacement to overcome the vendor lock-in. Oh, you might know a replacement called &lt;a href="http://www.slideme.org"&gt;SlideMe&lt;/a&gt; (or Mobentoo) already. Well, that bugger is proprietary too, so not a solution at all.&lt;br&gt;&lt;br&gt;&lt;strong&gt;Nokia and Maemo to the rescue&lt;/strong&gt;&lt;br&gt;&lt;br&gt;In most discussions about the openness of Android someone throws in Nokia and &lt;a href="http://www.maemo.org"&gt;Maemo&lt;/a&gt;, as a solution to the dilemma. Reading all those positive comments I simply had to give it a try, but all my hopes were destroyed within a few minutes.&lt;br&gt;&lt;br&gt;Let's start with the good news and let alone the reason why my hopes were destroyed for another minute or two. Maemo is based on Debian GNU/Linux and various Free Software components, such as GTK+, gstreamer, esd and friends. Most of the system is Free Software which is a good thing(tm) and reading all of this really got me into Maemo. Okay, some applications seem to be proprietary, but I am sure that could be fixed rather easily, so I could once for all use a truly open phone.&lt;br&gt;&lt;br&gt;...and then came the &lt;a href="http://repository.maemo.org/stable/fremantle/maemo-sdk-install_5.0.sh"&gt;SDK installer shell script&lt;/a&gt;:&lt;br&gt;&lt;blockquote&gt;#!/bin/sh&lt;br&gt;# Copyright (C) 2006-2009 Nokia Corporation&lt;br&gt;#&lt;br&gt;# This is proprietary software owned by Nokia Corporation.&lt;br&gt;#&lt;br&gt;# Contact: Maemo Integration &amp;lt;integration@maemo.org&amp;gt;&lt;br&gt;# Version: $Revision: 1110 $&lt;/blockquote&gt;&lt;br&gt;Now there is one question you should ask yourself: Why would someone trying to promote his platform as being open make the *installer* script for its SDK proprietary? Come on, it's an installer script, how much of your secret juice could be in there? What's the problem with people modifying it and working on this installer script in an open development environment?&lt;br&gt;&lt;br&gt;I had high hopes for Nokia actually doing a bit better than Google, but it seems they've failed to do so. It may be me overreacting, but a proprietary SDK installer shell script scares me enough not to install the SDK and have a look at it for now nor to think about buying a Maemo-based device in the near future. Please Nokia, either get the facts straight or provide us with a free SDK to your free &amp;amp; open platform.&lt;br&gt;&lt;br&gt;So, in short, Google is bad at working with the community and creating a truly open development process, and Nokia simply fails in terms of not scaring off prospective developers for their open platform with the proprietary SDK installer. Do you have any solutions in terms of an open phone environment, apart from what OpenMoko has come up with?</description><category>foss</category><category>Technology</category><category>personal</category><category>gsoc</category><category>Debian</category><category>free software</category><guid>http://blog.sp.or.at/posts/200911android-mythbusters-and-openness.html</guid><pubDate>Sun, 08 Nov 2009 03:49:00 GMT</pubDate></item><item><title>UPDATE: AdSense on freedom blog reloaded</title><link>http://blog.sp.or.at/posts/200903update-adsense-on-freedom-blog-reloaded.html</link><description>&lt;p&gt;I just wanted to inform you that I am in the process of adding AdSense ads to this blog.&lt;br&gt;However, I am planning on having a one-ad-per-post policy, whilst not placing any ads on the front page.&lt;br&gt;&lt;br&gt;More details on this topic will follow in the next few days.&lt;br&gt;&lt;br&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt;&lt;br&gt;&lt;br&gt;I have now integrated AdSense into this blog. As promised the front page does not contain any ads, but all other pages do. Ads are shown as a widget so they are not in-text and thus should not disturb you whilst reading.&lt;/p&gt;</description><category>personal</category><guid>http://blog.sp.or.at/posts/200903update-adsense-on-freedom-blog-reloaded.html</guid><pubDate>Mon, 30 Mar 2009 09:30:00 GMT</pubDate></item><item><title>A possible attack - what to do about this?</title><link>http://blog.sp.or.at/posts/200903possible-attack-what-to-do-about-this.html</link><description>&lt;p&gt;Just as I wanted to start writing an article here and I entered the URL of this blog into my browser I got no response from the webserver, zero, nothing.&lt;br&gt;First I thought the PHP fastcgi process for this virtual host died, but a quick check on another virtual host suggested that something else was going on.&lt;br&gt;&lt;br&gt;So I guessed the lighttpd process itself must be experiencing problems of some sort, but after doing a "netstat -nat" I  knew what was going on:&lt;br&gt;&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.248:12474    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.234:39671    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.253:39211    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.234:55160    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.230:25836    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.231:16865    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.232:24266    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.240:38441    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.243:17726    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.241:38206    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.251:23892    LAST_ACK&lt;br&gt;tcp6       1      1 83.65.62.72:80          61.135.190.225:29675    LAST_ACK&lt;br&gt;&lt;br&gt;Plus "a few" more of those. Now I'm not entirely sure whether it's just some systems misbehaving or actually an attack, but my feelings told me this could have been intentional after all.&lt;br&gt;I did a quick whois on one of those IP addresses and came up with the 61.135.0.0/16 network which is owned by China Network Communications Group Corporation.&lt;br&gt;&lt;br&gt;As the connections were made from pretty much every host in that network I had two choices: sit it out or block it.&lt;br&gt;&lt;br&gt;I came to the conclusion that blocking the entire subnet from connecting to this system, at least temporarily, might be a viable solution and so I did.&lt;br&gt;However, afterwards I am asking myself whether I really had to block an entire 16-Bit network, so I am asking you: &lt;strong&gt;how do you handle such situations usually?&lt;/strong&gt;&lt;/p&gt;</description><category>personal</category><category>observations</category><guid>http://blog.sp.or.at/posts/200903possible-attack-what-to-do-about-this.html</guid><pubDate>Thu, 26 Mar 2009 11:06:00 GMT</pubDate></item><item><title>sptest - a Python unittest extension</title><link>http://blog.sp.or.at/posts/200809sptest-python-unittest-extension.html</link><description>&lt;p&gt;Even though this is meant to be an introduction to sptest, I want to start off by letting you know why I wrote this extension to the Python &lt;a href="http://docs.python.org/lib/module-unittest.html" title="unittest Module"&gt;unittest&lt;/a&gt; module.&lt;br&gt;&lt;br&gt;I am currently working on a (still private) project that uses Python's unittest module and the underlying framework. Even though unittest is a great utility for creating unit tests I found that the output it generates is unusable for me. I wanted something different though. Maybe a bit more aesthetic than the simple command line output unittest provides.&lt;br&gt;&lt;br&gt;So I started off writing a class extending &lt;a href="http://docs.python.org/lib/testresult-objects.html" title="TestResult Objects"&gt;unittest.TestResult&lt;/a&gt; to fit my needs. I soon realized that interfacing with this part of unittest is not as easy as it could be, but I still continued to write my class.&lt;br&gt;After two hours of hacking I noticed that this class had become a monster. It was huge and I felt uncomfortable having such a huge class lying around somewhere in a &lt;em&gt;"runtests.py"&lt;/em&gt; file for the only reason of having that pretty output.&lt;br&gt;&lt;br&gt;This was the point when I decided to move all that code into a separate project and try to come up with a more intuitive API. This was the second when &lt;a href="http://www.bitbucket.org/sp/sptest/" title="sptest project"&gt;sptest&lt;/a&gt; was born, about 5 hours ago.&lt;br&gt;&lt;br&gt;What I did come up with is a small Python module that makes customizing the way unit test results are presented (or stored) easier. It currently includes two output handler classes. One providing fancy CLI output on ANSI terminals and the other one providing XML output.&lt;br&gt;&lt;br&gt;Additional output handler classes could store the result of the unit tests in a database or send it to a central point on the network, but implementing that is up to someone else, for now.&lt;br&gt;&lt;br&gt;Running unit tests with &lt;em&gt;sptest&lt;/em&gt; is as simple as calling:&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;sptest.TestMain(TestSuite).run()&lt;/blockquote&gt;&lt;br&gt;By default the FancyCLIOutput handler class will be invoked and you will see why the handler is called the way it is immediatly.&lt;br&gt;&lt;br&gt;In order to generate an XML file containing the test results one just has to modify the call to &lt;em&gt;sptest&lt;/em&gt; to look like this:&lt;br&gt;&lt;blockquote&gt;sptest.TestMain(TestSuite, output_class=sptest.output.XMLOutput).run()&lt;/blockquote&gt;&lt;br&gt;&lt;em&gt;sptest&lt;/em&gt; also provides support for preparation and cleanup functions. The only thing you have to do is define these functions and adjust the arguments passed to &lt;em&gt;TestMain&lt;/em&gt; accordingly.&lt;br&gt;&lt;br&gt;Most of the code is already documented and a doxygen configuration file for generating the html documentation comes with the code. Also, &lt;a href="http://www.bitbucket.org/sp/sptest/src/d332f262bb0d/doc/example/example0.py" title="example0.py"&gt;two&lt;/a&gt; &lt;a href="http://www.bitbucket.org/sp/sptest/src/d332f262bb0d/doc/example/example0_xml.py" title="example0_xml.py"&gt;examples&lt;/a&gt; are included that show how to use sptest.</description><category>foss</category><category>personal</category><category>free software</category><guid>http://blog.sp.or.at/posts/200809sptest-python-unittest-extension.html</guid><pubDate>Wed, 10 Sep 2008 11:06:00 GMT</pubDate></item><item><title>Status update</title><link>http://blog.sp.or.at/posts/200806status-update.html</link><description>&lt;p&gt;It has been quite a while since I last wrote an article and published it here.&lt;br&gt;&lt;br&gt;It's not like I got tired of blogging. The reason why there hasn't been an update for such a long time is that I was doing my final exams in the past two months.&lt;br&gt;&lt;br&gt;After passing my exams on Friday I should have time to write some articles again, so watch out for new articles here.&lt;/p&gt;</description><category>personal</category><guid>http://blog.sp.or.at/posts/200806status-update.html</guid><pubDate>Mon, 23 Jun 2008 10:38:00 GMT</pubDate></item><item><title>How to reject mails containing OOXML attachments using Exim4</title><link>http://blog.sp.or.at/posts/200803how-to-reject-mails-containing-ooxml.html</link><description>&lt;p&gt;I finally did it. I modified my Exim's configuration to reject any mail with an OOXML attachment (ie. docx, pptx, xlsx).&lt;br&gt;&lt;br&gt;There are two main reasons for this step. First of all I am not able to open these files and I believe I will not be able to do so and get them properly rendered anytime soon. Secondly, people using the new Microsoft Office suite seem to be ignorant enough to think everyone is able to view those files, which is not the case.&lt;br&gt;&lt;br&gt;I am trying to make one point here:&lt;br&gt;People sending emails to other people should &lt;b&gt;always&lt;/b&gt; send files in internationally standardized formats (&lt;a href="http://en.wikipedia.org/wiki/Open_format"&gt;open formats&lt;/a&gt;), such as &lt;a href="http://en.wikipedia.org/wiki/OpenDocument"&gt;ODF&lt;/a&gt; or &lt;a href="http://en.wikipedia.org/wiki/PDF"&gt;PDF&lt;/a&gt;, so that everyone is able to open them and use the attachments. Also, I am trying to make people sending out emails in those formats aware of the fact that not everyone can open them, not everyone wants to invest a lot of money in new applications and that some people generally prefer Free Software and that there is no way of using those files using Free Software right now.&lt;br&gt;&lt;br&gt;Enough for the introduction, I wanted to explain how to achieve this behavior using Exim4:&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;deny  message         = Message contains attachment of unwanted type ($found_extension)&lt;br&gt;demime          = docx:pptx:xlsx&lt;/blockquote&gt;&lt;br&gt;Putting this snippet in the &lt;i&gt;acl_check_content&lt;/i&gt; section of your exim4.conf should do the trick.&lt;br&gt;&lt;br&gt;Oh, and while I am at it, you can easily use this snippet to drop mails with other attachments, based on the file extension.&lt;br&gt;For example, in order to reject all mails containing WMV files just use &lt;i&gt;demime = wmv&lt;/i&gt;.&lt;br&gt;&lt;br&gt;Note that this snippets checks for a specified file extension instead of a MIME type. People still can get mails through in those formats if they modify the file extension, so &lt;b&gt;do not&lt;/b&gt; use this method as a security measure.</description><category>Technology</category><category>personal</category><category>free software</category><guid>http://blog.sp.or.at/posts/200803how-to-reject-mails-containing-ooxml.html</guid><pubDate>Thu, 27 Mar 2008 10:33:00 GMT</pubDate></item><item><title>Less spam again</title><link>http://blog.sp.or.at/posts/200803less-spam-again.html</link><description>&lt;p&gt;I found a solution to the problem last described in &lt;a href="http://espi86.wordpress.com/2008/03/25/more-spam-again/"&gt;this&lt;/a&gt; article.&lt;br&gt;&lt;br&gt;To sum the problem I was experiencing up: My anti-spam system (namely Spamassassin) did not detect spam mails anymore.&lt;br&gt;&lt;br&gt;Now here is the reason it did not: After some more investigation of the problem I noticed that spam emails were received via a local connection (forwarded from fetchmail). However, one of my Exim ACLs says not to scan emails from localhost for spam.&lt;br&gt;&lt;br&gt;So, the solution might be a hack, but it worked out perfectly. Starting fetchmail with the &lt;i&gt;-S &amp;lt;servername&amp;gt;&lt;/i&gt; argument causes it to send emails to the given SMTP server rather than localhost. Using the real hostname of my server caused the "do not scan local mails" not to kick in and all mails received via fetchmail to be scanned again.&lt;br&gt;&lt;br&gt;&lt;b&gt;Problem fixed&lt;/b&gt;.&lt;/p&gt;</description><category>personal</category><category>observations</category><guid>http://blog.sp.or.at/posts/200803less-spam-again.html</guid><pubDate>Wed, 26 Mar 2008 15:26:00 GMT</pubDate></item><item><title>Moving my blog</title><link>http://blog.sp.or.at/posts/200803moving-my-blog.html</link><description>&lt;p&gt;And yet another post today. As I am planning to take down my personal server in the next few weeks (maybe months) I have moved my blog to wordpress.com. A 301-redirect has been set up at http://sp.or.at/blog so people (and robots) are still able to find my blog.&lt;/p&gt;</description><category>personal</category><guid>http://blog.sp.or.at/posts/200803moving-my-blog.html</guid><pubDate>Tue, 25 Mar 2008 14:29:00 GMT</pubDate></item><item><title>Removing a lot of frozen mails from Exim’s mail queue</title><link>http://blog.sp.or.at/posts/200803removing-lot-of-frozen-mails-from-exims.html</link><description>&lt;p&gt;After writing my &lt;a href="http://www.sp.or.at/blog/2008/03/25/more-spam-again/"&gt;last article&lt;/a&gt;, I started digging into my mail configuration and after doing a quick "mailq" noticed a lot of frozen messages in Exim's queue. After inspecting the logs and the mails themselves I noticed the problem was caused by a broken POP server I retrieve mails from periodically. A few days ago something went wrong on that server and all messages were marked as unread causing my fetchmail to re-fetch all of them (about 2.5K).&lt;br&gt;&lt;br&gt;Now that my mail server is configured  to do sender verification and a few very old mails came from domains or systems which are non-existent today about 50 mails ended up being frozen.&lt;br&gt;&lt;br&gt;But how to remove all frozen mails from Exim's queue? I ended up using &lt;em&gt;mailq | grep frozen&lt;/em&gt; to get a list of  all messages (and more importantly their message IDs) and saved that to a file. I then wrote a minimalistic Python script attached to this article to delete all those messages. Consider the script a quick and dirty hack, but it might come in handy for some of you. Get it &lt;a href="http://www.sp.or.at/batchdelete.py" title="batchdelete.py"&gt;here.&lt;/a&gt;&lt;/p&gt;</description><category>personal</category><category>free software</category><guid>http://blog.sp.or.at/posts/200803removing-lot-of-frozen-mails-from-exims.html</guid><pubDate>Tue, 25 Mar 2008 13:40:00 GMT</pubDate></item><item><title>More spam again?</title><link>http://blog.sp.or.at/posts/200803more-spam-again.html</link><description>&lt;p&gt;Right now I am asking myself if it just affects me or if more spam is sent out and less is detected by anti-spam software again.&lt;br&gt;&lt;br&gt;I set up my mail server in February and noticed a decrease in spam mail delivered to my mailbox compared to my old system. However, in the past two weeks more and more spam mail has been delivered to my mailbox again. So is it just me, my system or the system's configuration or is everyone else receiving more spam again?&lt;br&gt;&lt;br&gt;Anyways, it's about time to inspect the configuration of my mail system again...&lt;/p&gt;</description><category>personal</category><guid>http://blog.sp.or.at/posts/200803more-spam-again.html</guid><pubDate>Tue, 25 Mar 2008 13:08:00 GMT</pubDate></item></channel></rss>